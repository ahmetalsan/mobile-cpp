// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from helloworld.djinni

#import "HWApiHandshake+Private.h"
#import "HWApiHandshake.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "HWHandshakeResultRecord+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface HWApiHandshake ()

- (id)initWithCpp:(const std::shared_ptr<::helloworld::ApiHandshake>&)cppRef;

@end

@implementation HWApiHandshake {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::helloworld::ApiHandshake>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::helloworld::ApiHandshake>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable HWApiHandshake *)create {
    try {
        auto objcpp_result_ = ::helloworld::ApiHandshake::create();
        return ::djinni_generated::ApiHandshake::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull HWHandshakeResultRecord *)handshake:(nonnull NSString *)udId
                                    appVersion:(nonnull NSString *)appVersion
                                     osVersion:(nonnull NSString *)osVersion
                                        osType:(nonnull NSString *)osType {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->handshake(::djinni::String::toCpp(udId),
                                                             ::djinni::String::toCpp(appVersion),
                                                             ::djinni::String::toCpp(osVersion),
                                                             ::djinni::String::toCpp(osType));
        return ::djinni_generated::HandshakeResultRecord::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto ApiHandshake::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto ApiHandshake::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<HWApiHandshake>(cpp);
}

}  // namespace djinni_generated

@end
